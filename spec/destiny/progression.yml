components:
  schemas:
    DestinyFactionProgression:
      type: object
      properties:
        factionHash:
          type: integer
          description: The hash identifier of the Faction related to this progression. Use it to look up the DestinyFactionDefinition for more rendering info.
          format: uint32
          x-mapped-definition:
            $ref: 'definitions.yml#/components/schemas/DestinyFactionDefinition'
        factionVendorIndex:
          type: integer
          description: The index of the Faction vendor that is currently available. Will be set to -1 if no vendors are available.
          format: int32
        progressionHash:
          type: integer
          description: The hash identifier of the Progression in question. Use it to look up the DestinyProgressionDefinition in static data.
          format: uint32
          x-mapped-definition:
            $ref: 'definitions.yml#/components/schemas/DestinyProgressionDefinition'
        dailyProgress:
          type: integer
          description: The amount of progress earned today for this progression.
          format: int32
        dailyLimit:
          type: integer
          description: If this progression has a daily limit, this is that limit.
          format: int32
        weeklyProgress:
          type: integer
          description: The amount of progress earned toward this progression in the current week.
          format: int32
        weeklyLimit:
          type: integer
          description: If this progression has a weekly limit, this is that limit.
          format: int32
        currentProgress:
          type: integer
          description: This is the total amount of progress obtained overall for this progression (for instance, the total amount of Character Level experience earned)
          format: int32
        level:
          type: integer
          description: This is the level of the progression (for instance, the Character Level).
          format: int32
        levelCap:
          type: integer
          description: This is the maximum possible level you can achieve for this progression (for example, the maximum character level obtainable)
          format: int32
        stepIndex:
          type: integer
          description: Progressions define their levels in "steps". Since the last step may be repeatable, the user may be at a higher level than the actual Step achieved in the progression. Not necessarily useful, but potentially interesting for those cruising the API. Relate this to the "steps" property of the DestinyProgression to see which step the user is on, if you care about that. (Note that this is Content Version dependent since it refers to indexes.)
          format: int32
        progressToNextLevel:
          type: integer
          description: The amount of progression (i.e. "Experience") needed to reach the next level of this Progression. Jeez, progression is such an overloaded word.
          format: int32
        nextLevelAt:
          type: integer
          description: The total amount of progression (i.e. "Experience") needed in order to reach the next level.
          format: int32
        currentResetCount:
          type: integer
          description: The number of resets of this progression you've executed this season, if applicable to this progression.
          format: int32
        seasonResets:
          type: array
          description: Information about historical resets of this progression, if there is any data for it.
          items:
            $ref: '../destiny.yml#/components/schemas/DestinyProgressionResetEntry'
        rewardItemStates:
          type: array
          description: Information about historical rewards for this progression, if there is any data for it.
          items:
            type: integer
            description: Represents the different states a progression reward item can be in.
            format: int32
            x-enum-reference:
              $ref: '../destiny.yml#/components/schemas/DestinyProgressionRewardItemState'
      description: Mostly for historical purposes, we segregate Faction progressions from other progressions. This is just a DestinyProgression with a shortcut for finding the DestinyFactionDefinition of the faction related to the progression.

