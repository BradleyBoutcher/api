components:
  schemas:
    DestinyActionRequest:
      type: object
      properties:
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyCharacterActionRequest:
      type: object
      properties:
        characterId:
          type: integer
          format: int64
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyItemActionRequest:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        characterId:
          type: integer
          format: int64
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyPostmasterTransferRequest:
      type: object
      properties:
        itemReferenceHash:
          type: integer
          format: uint32
        stackSize:
          type: integer
          format: int32
        itemId:
          type: integer
          format: int64
        characterId:
          type: integer
          format: int64
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyItemSetActionRequest:
      type: object
      properties:
        itemIds:
          type: array
          items:
            type: integer
            format: int64
        characterId:
          type: integer
          format: int64
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyItemStateRequest:
      type: object
      properties:
        state:
          type: boolean
        itemId:
          type: integer
          format: int64
        characterId:
          type: integer
          format: int64
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyInsertPlugsActionRequest:
      type: object
      properties:
        actionToken:
          type: string
          description: Action token provided by the AwaGetActionToken API call.
        itemInstanceId:
          type: integer
          description: The instance ID of the item having a plug inserted. Only instanced items can have sockets.
          format: int64
        plug:
          type: object
          description: The plugs being inserted.
          allOf:
            - $ref: '#/components/schemas/DestinyInsertPlugsRequestEntry'
        characterId:
          type: integer
          format: int64
        membershipType:
          type: integer
          format: int32
          x-enum-reference:
            $ref: '../../shared.yml#/components/schemas/BungieMembershipType'

    DestinyInsertPlugsRequestEntry:
      type: object
      properties:
        socketIndex:
          type: integer
          description: "The index into the socket array, which identifies the specific socket being operated on. We also need to know the socketArrayType in order to uniquely identify the socket.
      Don't point to or try to insert a plug into an infusion socket. It won't work."
          format: int32
        socketArrayType:
          type: integer
          description: This property, combined with the socketIndex, tells us which socket we are referring to (since operations can be performed on both Intrinsic and "default" sockets, and they occupy different arrays in the Inventory Item Definition). I know, I know. Don't give me that look.
          format: int32
          x-enum-reference:
            $ref: '#/components/schemas/DestinySocketArrayType'
        plugItemHash:
          type: integer
          description: 'Plugs are never instanced (except in infusion). So with the hash alone, we should be able to: 1) Infer whether the player actually needs to have the item, or if it''s a reusable plug 2) Perform any operation needed to use the Plug, including removing the plug item and running reward sheets.'
          format: uint32
      description: "Represents all of the data related to a single plug to be inserted.
      Note that, while you *can* point to a socket that represents infusion, you will receive an error if you attempt to do so. Come on guys, let's play nice."

    DestinySocketArrayType:
      type: integer
      description: "If you look in the DestinyInventoryItemDefinition's \"sockets\" property, you'll see that there are two types of sockets: intrinsic, and \"socketEntry.\"
      Unfortunately, because Intrinsic sockets are a whole separate array, it is no longer sufficient to know the index into that array to know which socket we're talking about. You have to know whether it's in the default \"socketEntries\" or if it's in the \"intrinsic\" list."
      format: int32
      enum:
        - 0
        - 1
      x-enum-values:
        - numericValue: "0"
          identifier: Default
        - numericValue: "1"
          identifier: Intrinsic

