openapi: 3.0.1
info:
  title: Bungie.Net API
  description:
    These endpoints constitute the functionality exposed by Bungie.net,
    both for more traditional website functionality and for connectivity to Bungie
    video games and their related functionality.
  termsOfService: https://www.bungie.net/en/View/Bungie/terms
  contact:
    name: Bungie.net API Support
    url: https://github.com/Bungie-net/api
    email: support@bungie.com
  license:
    name: BSD License 2.0
    url: https://github.com/Bungie-net/api/blob/master/LICENSE
  version: 2.10.0
servers:
  - url: https://bungie.com/Platform

components:
  parameters:
    componentParam:
      name: component
      in: query
      description: A comma separated list of components to return (as strings or
        numeric values). See the DestinyComponentType enum for valid components
        to request. You must request at least one component to receive results.
      style: form
      explode: false
      schema:
        type: array
        items:
          type: integer
          description: 'Represents the possible components that can be returned
            from Destiny "Get" calls such as GetProfile, GetCharacter, GetVendor
            etc...When making one of these requests, you will pass one or
            more of these components as a comma separated list in the "components="
            querystring parameter. For instance, if you want baseline Profile
            data, Character Data, and character progressions, you would pass
            "components=Profiles,Characters,CharacterProgressions" You may use
            either the numerical or string values.'
          format: int32
          x-enum-reference:
            $ref: "./components/destiny.yml#/components/schemas/DestinyComponentType"

  schemas:
    Application:
      $ref: "./components/applications.yml#/components/schemas/Application"

    ApiUsage:
      $ref: "./components/applications.yml#/components/schemas/ApiUsage"

    GeneralUser:
      $ref: "./components/user.yml#/components/schemas/GeneralUser"

    PlatformErrorCodes:
      $ref: "./components/exceptions.yml#/components/schemas/PlatformErrorCodes"

    "BungieMembershipType[]":
      type: array
      items:
        format: int32
        description: >-
          The types of membership the Accounts system supports. This is the
          external facing enum used in place of the internal-only
          Bungie.SharedDefinitions.MembershipType.
        type: integer
        x-enum-reference:
          $ref: "./components/user.yml#/components/schemas/BungieMembershipType"

  securitySchemes:
    apiKey:
      type: apiKey
      description:
        Every request requires an API key.  To get an API key, register
        a new application at https://www.bungie.net/en/Application.
      name: X-API-Key
      in: header
    oauth2:
      type: oauth2
      description:
        For requests that require Authentication, you will need to have
        your users authenticate via our OAuth mechanisms.  See https://github.com/Bungie-net/api/wiki/OAuth-Documentation
        for more details.
      flows:
        authorizationCode:
          authorizationUrl: https://www.bungie.net/en/OAuth/Authorize
          tokenUrl: https://www.bungie.net/Platform/App/OAuth/token/
          scopes:
            ReadBasicUserProfile:
              Read basic user profile information such as the
              user's handle, avatar icon, etc.
            ReadGroups:
              "Read Group/Clan Forums, Wall, and Members for groups and
              clans that the user has joined."
            WriteGroups:
              "Write Group/Clan Forums, Wall, and Members for groups and
              clans that the user has joined."
            AdminGroups:
              "Administer Group/Clan Forums, Wall, and Members for groups
              and clans that the user is a founder or an administrator."
            BnetWrite:
              "Create new groups, clans, and forum posts, along with other
              actions that are reserved for Bungie.netelevated scope: not meant
              to be used by third party applications."
            MoveEquipDestinyItems: Move or equip Destiny items
            ReadDestinyInventoryAndVault:
              "Read Destiny 1 Inventory and Vault contents.
              For Destiny 2, this scope is needed to read anything regarded as private.
              This is the only scope aDestiny 2 app needs for read operations
              against Destiny 2 data such as inventory, vault, currency,vendors,
              milestones, progression, etc."
            ReadUserData:
              "Read user data such as who they are web notifications,
              clan/group memberships, recent activity, muted users."
            EditUserData:
              Edit user data such as preferred language, status, motto,
              avatar selection and theme.
            ReadDestinyVendorsAndAdvisors:
              Access vendor and advisor data specific
              to a user. OBSOLETE. This scope is only used on the Destiny 1 API.
            ReadAndApplyTokens:
              Read offer history and claim and apply tokens for
              the user.
            AdvancedWriteActions:
              Can perform actions that will result in a prompt
              to the user via the Destiny app.
            PartnerOfferGrant:
              Can user the partner offer api to claim rewards defined
              for a partner

paths:
  /App/ApiUsage/{applicationId}/:
    get:
      tags:
        - App
      description:
        Get API usage by application for time frame specified. You can
        go as far back as 30 days ago, and can ask for up to a 48 hour window of time
        in a single request. You must be authenticated with at least the ReadUserData
        permission to access this endpoint.
      operationId: App.GetApplicationApiUsage
      parameters:
        - name: applicationId
          in: path
          description: ID of the application to get usage statistics.
          required: true
          schema:
            type: integer
            format: int32
        - name: end
          in: query
          description: End time for query. Goes to now if not specified.
          schema:
            type: string
            format: date-time
        - name: start
          in: query
          description: Start time for query. Goes to 24 hours ago if not specified.
          schema:
            type: string
            format: date-time
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/ApiUsage"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadUserData
  /App/FirstParty/:
    get:
      tags:
        - App
      description: Get list of applications created by Bungie.
      operationId: App.GetBungieApplications
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Application"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /User/GetBungieNetUserById/{id}/:
    get:
      tags:
        - User
      description: Loads a bungienet user by membership id.
      operationId: User.GetBungieNetUserById
      parameters:
        - name: id
          in: path
          description: The requested Bungie.net membership id.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/User.GeneralUser"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /User/SearchUsers/:
    get:
      tags:
        - User
      description: Returns a list of possible users based on the search string
      operationId: User.SearchUsers
      parameters:
        - name: q
          in: query
          description: The search string.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/GeneralUser"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /User/GetCredentialTypesForTargetAccount/{membershipId}/:
    get:
      tags:
        - User
      description: Returns a list of credential types attached to the requested account
      operationId: User.GetCredentialTypesForTargetAccount
      parameters:
        - name: membershipId
          in: path
          description: The user's membership id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "./components/users.yml#/schemas/GetCredentialTypesForAccountResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /User/GetAvailableThemes/:
    get:
      tags:
        - User
      description: Returns a list of all available user themes.
      operationId: User.GetAvailableThemes
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Config.UserTheme"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /User/GetMembershipsById/{membershipId}/{membershipType}/:
    get:
      tags:
        - User
      description:
        Returns a list of accounts associated with the supplied membership
        ID and membership type. This will include all linked accounts (even when hidden)
        if supplied credentials permit it.
      operationId: User.GetMembershipDataById
      parameters:
        - name: membershipId
          in: path
          description: The membership ID of the target user.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Type of the supplied membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/User.UserMembershipData"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /User/GetMembershipsForCurrentUser/:
    get:
      tags:
        - User
      description:
        Returns a list of accounts associated with signed in user. This
        is useful for OAuth implementations that do not give you access to the token
        response.
      operationId: User.GetMembershipDataForCurrentUser
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/User.UserMembershipData"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadBasicUserProfile
  /User/GetMembershipFromHardLinkedCredential/{crType}/{credential}/:
    get:
      tags:
        - User
      description:
        Gets any hard linked membership given a credential. Only works
        for credentials that are public (just SteamID64 right now). Cross Save aware.
      operationId: User.GetMembershipFromHardLinkedCredential
      parameters:
        - name: credential
          in: path
          description: The credential to look up. Must be a valid SteamID64.
          required: true
          schema:
            type: string
        - name: crType
          in: path
          description: The credential type. 'SteamId' is the only valid value at present.
          required: true
          schema:
            type: integer
            format: byte
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/User.HardLinkedUserMembership"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Content/GetContentType/{type}/:
    get:
      tags:
        - Content
      description: Gets an object describing a particular variant of content.
      operationId: Content.GetContentType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Content.Models.ContentTypeDescription"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Content/GetContentById/{id}/{locale}/:
    get:
      tags:
        - Content
      description: Returns a content item referenced by id
      operationId: Content.GetContentById
      parameters:
        - name: head
          in: query
          description: "false"
          schema:
            type: boolean
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: locale
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Content.ContentItemPublicContract"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Content/GetContentByTagAndType/{tag}/{type}/{locale}/:
    get:
      tags:
        - Content
      description: Returns the newest item that matches a given tag and Content Type.
      operationId: Content.GetContentByTagAndType
      parameters:
        - name: head
          in: query
          description: Not used.
          schema:
            type: boolean
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Content.ContentItemPublicContract"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Content/Search/{locale}/:
    get:
      tags:
        - Content
      description:
        Gets content based on querystring information passed in. Provides
        basic search and text search capabilities.
      operationId: Content.SearchContentWithText
      parameters:
        - name: ctype
          in: query
          description:
            "Content type tag: Help, News, etc. Supply multiple ctypes separated
            by space."
          schema:
            type: string
        - name: currentpage
          in: query
          description: Page number for the search results, starting with page 1.
          schema:
            type: integer
            format: int32
        - name: head
          in: query
          description: Not used.
          schema:
            type: boolean
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: searchtext
          in: query
          description: Word or phrase for the search.
          schema:
            type: string
        - name: source
          in: query
          description:
            For analytics, hint at the part of the app that triggered the
            search. Optional.
          schema:
            type: string
        - name: tag
          in: query
          description: Tag used on the content to be searched.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfContentItemPublicContract"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Content/SearchContentByTagAndType/{tag}/{type}/{locale}/:
    get:
      tags:
        - Content
      description:
        Searches for Content Items that match the given Tag and Content
        Type.
      operationId: Content.SearchContentByTagAndType
      parameters:
        - name: currentpage
          in: query
          description: Page number for the search results starting with page 1.
          schema:
            type: integer
            format: int32
        - name: head
          in: query
          description: Not used.
          schema:
            type: boolean
        - name: itemsperpage
          in: query
          description: Not used.
          schema:
            type: integer
            format: int32
        - name: locale
          in: path
          required: true
          schema:
            type: string
        - name: tag
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfContentItemPublicContract"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Content/SearchHelpArticles/{searchtext}/{size}/:
    get:
      tags:
        - Content
      description: Search for Help Articles.
      operationId: Content.SearchHelpArticles
      parameters:
        - name: searchtext
          in: path
          required: true
          schema:
            type: string
        - name: size
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    properties: {}
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false

  /Forum/GetTopicsPaged/{page}/{pageSize}/{group}/{sort}/{quickDate}/{categoryFilter}/:
    get:
      tags:
        - Forum
      description: Get topics from any forum.
      operationId: Forum.GetTopicsPaged
      parameters:
        - name: categoryFilter
          in: path
          description: A category filter
          required: true
          schema:
            type: integer
            format: int32
        - name: group
          in: path
          description: The group, if any.
          required: true
          schema:
            type: integer
            format: int64
        - name: locales
          in: query
          description:
            Comma seperated list of locales posts must match to return in
            the result list. Default 'en'
          schema:
            type: string
        - name: page
          in: path
          description: Zero paged page number
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          description: Unused
          required: true
          schema:
            type: integer
            format: int32
        - name: quickDate
          in: path
          description: A date filter.
          required: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: path
          description: The sort mode.
          required: true
          schema:
            type: integer
            format: byte
        - name: tagstring
          in: query
          description: The tags to search, if any.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetCoreTopicsPaged/{page}/{sort}/{quickDate}/{categoryFilter}/:
    get:
      tags:
        - Forum
      description: Gets a listing of all topics marked as part of the core group.
      operationId: Forum.GetCoreTopicsPaged
      parameters:
        - name: categoryFilter
          in: path
          description: The category filter.
          required: true
          schema:
            type: integer
            format: int32
        - name: locales
          in: query
          description:
            Comma seperated list of locales posts must match to return in
            the result list. Default 'en'
          schema:
            type: string
        - name: page
          in: path
          description: Zero base page
          required: true
          schema:
            type: integer
            format: int32
        - name: quickDate
          in: path
          description: The date filter.
          required: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: path
          description: The sort mode.
          required: true
          schema:
            type: integer
            format: byte
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetPostsThreadedPaged/{parentPostId}/{page}/{pageSize}/{replySize}/{getParentPost}/{rootThreadMode}/{sortMode}/:
    get:
      tags:
        - Forum
      description:
        Returns a thread of posts at the given parent, optionally returning
        replies to those posts as well as the original parent.
      operationId: Forum.GetPostsThreadedPaged
      parameters:
        - name: getParentPost
          in: path
          required: true
          schema:
            type: boolean
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: parentPostId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: replySize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: rootThreadMode
          in: path
          required: true
          schema:
            type: boolean
        - name: showbanned
          in: query
          description:
            If this value is not null or empty, banned posts are requested
            to be returned
          schema:
            type: string
        - name: sortMode
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetPostsThreadedPagedFromChild/{childPostId}/{page}/{pageSize}/{replySize}/{rootThreadMode}/{sortMode}/: 
    get:
      tags:
        - Forum
      description:
        Returns a thread of posts starting at the topicId of the input
        childPostId, optionally returning replies to those posts as well as the original
        parent.
      operationId: Forum.GetPostsThreadedPagedFromChild
      parameters:
        - name: childPostId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: replySize
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: rootThreadMode
          in: path
          required: true
          schema:
            type: boolean
        - name: showbanned
          in: query
          description:
            If this value is not null or empty, banned posts are requested
            to be returned
          schema:
            type: string
        - name: sortMode
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetPostAndParent/{childPostId}/:
    get:
      tags:
        - Forum
      description: Returns the post specified and its immediate parent.
      operationId: Forum.GetPostAndParent
      parameters:
        - name: childPostId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: showbanned
          in: query
          description:
            If this value is not null or empty, banned posts are requested
            to be returned
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetPostAndParentAwaitingApproval/{childPostId}/:
    get:
      tags:
        - Forum
      description:
        Returns the post specified and its immediate parent of posts that
        are awaiting approval.
      operationId: Forum.GetPostAndParentAwaitingApproval
      parameters:
        - name: childPostId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: showbanned
          in: query
          description:
            If this value is not null or empty, banned posts are requested
            to be returned
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetTopicForContent/{contentId}/:
    get:
      tags:
        - Forum
      description: Gets the post Id for the given content item's comments, if it exists.
      operationId: Forum.GetTopicForContent
      parameters:
        - name: contentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int64
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/GetForumTagSuggestions/:
    get:
      tags:
        - Forum
      description:
        Gets tag suggestions based on partial text entry, matching them
        with other tags previously used in the forums.
      operationId: Forum.GetForumTagSuggestions
      parameters:
        - name: partialtag
          in: query
          description: The partial tag input to generate suggestions from.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Tags.Models.Contracts.TagResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/Poll/{topicId}/:
    get:
      tags:
        - Forum
      description: Gets the specified forum poll.
      operationId: Forum.GetPoll
      parameters:
        - name: topicId
          in: path
          description: The post id of the topic that has the poll.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Forum/Recruit/Summaries/:
    post:
      tags:
        - Forum
      description:
        Allows the caller to get a list of to 25 recruitment thread summary
        information objects.
      operationId: Forum.GetRecruitmentThreadSummaries
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Forum.ForumRecruitmentDetail"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/GetAvailableAvatars/:
    get:
      tags:
        - GroupV2
      description:
        Returns a list of all available group avatars for the signed-in
        user.
      operationId: GroupV2.GetAvailableAvatars
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      type: string
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/GetAvailableThemes/:
    get:
      tags:
        - GroupV2
      description: Returns a list of all available group themes.
      operationId: GroupV2.GetAvailableThemes
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Config.GroupTheme"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/GetUserClanInviteSetting/{mType}/:
    get:
      tags:
        - GroupV2
      description:
        Gets the state of the user's clan invite preferences for a particular
        membership type - true if they wish to be invited to clans, false otherwise.
      operationId: GroupV2.GetUserClanInviteSetting
      parameters:
        - name: mType
          in: path
          description:
            The Destiny membership type of the account we wish to access
            settings.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: boolean
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadUserData
  /GroupV2/Recommended/{groupType}/{createDateRange}/:
    post:
      tags:
        - GroupV2
      description:
        Gets groups recommended for you based on the groups to whom those
        you follow belong.
      operationId: GroupV2.GetRecommendedGroups
      parameters:
        - name: createDateRange
          in: path
          description: Requested range in which to pull recommended groups
          required: true
          schema:
            type: integer
            format: int32
        - name: groupType
          in: path
          description: Type of groups requested
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/GroupsV2.GroupV2Card"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadGroups
  /GroupV2/Search/:
    post:
      tags:
        - GroupV2
      description: Search for Groups.
      operationId: GroupV2.GroupSearch
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/:
    get:
      tags:
        - GroupV2
      description: Get information about a specific group of the given ID.
      operationId: GroupV2.GetGroup
      parameters:
        - name: groupId
          in: path
          description: Requested group's id.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/Name/{groupName}/{groupType}/:
    get:
      tags:
        - GroupV2
      description:
        Get information about a specific group with the given name and
        type.
      operationId: GroupV2.GetGroupByName
      parameters:
        - name: groupName
          in: path
          description: Exact name of the group to find.
          required: true
          schema:
            type: string
        - name: groupType
          in: path
          description: Type of group to find.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/NameV2/:
    post:
      tags:
        - GroupV2
      description:
        Get information about a specific group with the given name and
        type. The POST version.
      operationId: GroupV2.GetGroupByNameV2
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/OptionalConversations/:
    get:
      tags:
        - GroupV2
      description:
        Gets a list of available optional conversation channels and their
        settings.
      operationId: GroupV2.GetGroupOptionalConversations
      parameters:
        - name: groupId
          in: path
          description: Requested group's id.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/GroupsV2.GroupOptionalConversation"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/Edit/:
    post:
      tags:
        - GroupV2
      description:
        Edit an existing group. You must have suitable permissions in the
        group to perform this operation. This latest revision will only edit the fields
        you pass in - pass null for properties you want to leave unaltered.
      operationId: GroupV2.EditGroup
      parameters:
        - name: groupId
          in: path
          description: Group ID of the group to edit.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/EditClanBanner/:
    post:
      tags:
        - GroupV2
      description:
        Edit an existing group's clan banner. You must have suitable permissions
        in the group to perform this operation. All fields are required.
      operationId: GroupV2.EditClanBanner
      parameters:
        - name: groupId
          in: path
          description: Group ID of the group to edit.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/EditFounderOptions/:
    post:
      tags:
        - GroupV2
      description:
        Edit group options only available to a founder. You must have suitable
        permissions in the group to perform this operation.
      operationId: GroupV2.EditFounderOptions
      parameters:
        - name: groupId
          in: path
          description: Group ID of the group to edit.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/OptionalConversations/Add/:
    post:
      tags:
        - GroupV2
      description:
        Add a new optional conversation/chat channel. Requires admin permissions
        to the group.
      operationId: GroupV2.AddOptionalConversation
      parameters:
        - name: groupId
          in: path
          description: Group ID of the group to edit.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int64
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/OptionalConversations/Edit/{conversationId}/:
    post:
      tags:
        - GroupV2
      description:
        Edit the settings of an optional conversation/chat channel. Requires
        admin permissions to the group.
      operationId: GroupV2.EditOptionalConversation
      parameters:
        - name: conversationId
          in: path
          description: Conversation Id of the channel being edited.
          required: true
          schema:
            type: integer
            format: int64
        - name: groupId
          in: path
          description: Group ID of the group to edit.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int64
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/:
    get:
      tags:
        - GroupV2
      description: Get the list of members in a given group.
      operationId: GroupV2.GetMembersOfGroup
      parameters:
        - name: groupId
          in: path
          description: The ID of the group.
          required: true
          schema:
            type: integer
            format: int64
        - name: currentpage
          in: query
          description:
            Page number (starting with 1). Each page has a fixed size of
            50 items per page.
          required: true
          schema:
            type: integer
            format: int32
        - name: memberType
          in: query
          description: Filter out other member types. Use None for all members.
          schema:
            type: integer
            format: int32
        - name: nameSearch
          in: query
          description:
            The name fragment upon which a search should be executed for
            members with matching display or unique names.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfGroupMember"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/AdminsAndFounder/:
    get:
      tags:
        - GroupV2
      description:
        Get the list of members in a given group who are of admin level
        or higher.
      operationId: GroupV2.GetAdminsAndFounderOfGroup
      parameters:
        - name: currentpage
          in: query
          description:
            Page number (starting with 1). Each page has a fixed size of
            50 items per page.
          required: true
          schema:
            type: integer
            format: int32
        - name: groupId
          in: path
          description: The ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfGroupMember"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/Members/{membershipType}/{membershipId}/SetMembershipType/{memberType}/:
     post:
      tags:
        - GroupV2
      description:
        Edit the membership type of a given member. You must have suitable
        permissions in the group to perform this operation.
      operationId: GroupV2.EditGroupMembership
      parameters:
        - name: groupId
          in: path
          description: ID of the group to which the member belongs.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: Membership ID to modify.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the provide membership ID.
          required: true
          schema:
            type: integer
            format: int32
        - name: memberType
          in: path
          description: New membertype for the specified member.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/{membershipType}/{membershipId}/Kick/:
    post:
      tags:
        - GroupV2
      description:
        Kick a member from the given group, forcing them to reapply if
        they wish to re-join the group. You must have suitable permissions in the
        group to perform this operation.
      operationId: GroupV2.KickMember
      parameters:
        - name: groupId
          in: path
          description: Group ID to kick the user from.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: Membership ID to kick.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the provided membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupMemberLeaveResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/{membershipType}/{membershipId}/Ban/:
    post:
      tags:
        - GroupV2
      description:
        Bans the requested member from the requested group for the specified
        period of time.
      operationId: GroupV2.BanMember
      parameters:
        - name: groupId
          in: path
          description: Group ID that has the member to ban.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: Membership ID of the member to ban from the group.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the provided membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/{membershipType}/{membershipId}/Unban/:
    post:
      tags:
        - GroupV2
      description: Unbans the requested member, allowing them to re-apply for membership.
      operationId: GroupV2.UnbanMember
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: Membership ID of the member to unban from the group
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the provided membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Banned/:
    get:
      tags:
        - GroupV2
      description:
        Get the list of banned members in a given group. Only accessible
        to group Admins and above. Not applicable to all groups. Check group features.
      operationId: GroupV2.GetBannedMembersOfGroup
      parameters:
        - name: currentpage
          in: query
          description:
            Page number (starting with 1). Each page has a fixed size of
            50 entries.
          required: true
          schema:
            type: integer
            format: int32
        - name: groupId
          in: path
          description: Group ID whose banned members you are fetching
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfGroupBan"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Admin/AbdicateFoundership/{membershipType}/{founderIdNew}/:
    post:
      tags:
        - GroupV2
      description:
        An administrative method to allow the founder of a group or clan
        to give up their position to another admin permanently.
      operationId: GroupV2.AbdicateFoundership
      parameters:
        - name: founderIdNew
          in: path
          description: The new founder for this group. Must already be a group admin.
          required: true
          schema:
            type: integer
            format: int64
        - name: groupId
          in: path
          description: The target group id.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the provided founderIdNew.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: boolean
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/Members/Pending/:
    get:
      tags:
        - GroupV2
      description:
        Get the list of users who are awaiting a decision on their application
        to join a given group. Modified to include application info.
      operationId: GroupV2.GetPendingMemberships
      parameters:
        - name: currentpage
          in: path
          description:
            Page number (starting with 1). Each page has a fixed size of
            50 items per page.
          required: true
          schema:
            type: integer
            format: int32
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfGroupMemberApplication"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/InvitedIndividuals/:
    get:
      tags:
        - GroupV2
      description: Get the list of users who have been invited into the group.
      operationId: GroupV2.GetInvitedIndividuals
      parameters:
        - name: currentpage
          in: path
          description:
            Page number (starting with 1). Each page has a fixed size of
            50 items per page.
          required: true
          schema:
            type: integer
            format: int32
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfGroupMemberApplication"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/ApproveAll/:
    post:
      tags:
        - GroupV2
      description: Approve all of the pending users for the given group.
      operationId: GroupV2.ApproveAllPending
      parameters:
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Entities.EntityActionResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/DenyAll/:
    post:
      tags:
        - GroupV2
      description: Deny all of the pending users for the given group.
      operationId: GroupV2.DenyAllPending
      parameters:
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Entities.EntityActionResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/ApproveList/:
    post:
      tags:
        - GroupV2
      description: Approve all of the pending users for the given group.
      operationId: GroupV2.ApprovePendingForList
      parameters:
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Entities.EntityActionResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/Approve/{membershipType}/{membershipId}/:
    post:
      tags:
        - GroupV2
      description:
        Approve the given membershipId to join the group/clan as long as
        they have applied.
      operationId: GroupV2.ApprovePending
      parameters:
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: The membership id being approved.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the supplied membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: boolean
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/DenyList/:
    post:
      tags:
        - GroupV2
      description:
        Deny all of the pending users for the given group that match the
        passed-in .
      operationId: GroupV2.DenyPendingForList
      parameters:
        - name: groupId
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Entities.EntityActionResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/User/{membershipType}/{membershipId}/{filter}/{groupType}/:
    get:
      tags:
        - GroupV2
      description: Get information about the groups that a given member has joined.
      operationId: GroupV2.GetGroupsForMember
      parameters:
        - name: filter
          in: path
          description: Filter apply to list of joined groups.
          required: true
          schema:
            type: integer
            format: int32
        - name: groupType
          in: path
          description: Type of group the supplied member founded.
          required: true
          schema:
            type: integer
            format: int32
        - name: membershipId
          in: path
          description: Membership ID to for which to find founded groups.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the supplied membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GetGroupsForMemberResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/Recover/{membershipType}/{membershipId}/{groupType}/:
    get:
      tags:
        - GroupV2
      description:
        Allows a founder to manually recover a group they can see in game
        but not on bungie.net
      operationId: GroupV2.RecoverGroupForFounder
      parameters:
        - name: groupType
          in: path
          description: Type of group the supplied member founded.
          required: true
          schema:
            type: integer
            format: int32
        - name: membershipId
          in: path
          description: Membership ID to for which to find founded groups.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the supplied membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupMembershipSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/User/Potential/{membershipType}/{membershipId}/{filter}/{groupType}/:
    get:
      tags:
        - GroupV2
      description:
        Get information about the groups that a given member has applied
        to or been invited to.
      operationId: GroupV2.GetPotentialGroupsForMember
      parameters:
        - name: filter
          in: path
          description: Filter apply to list of potential joined groups.
          required: true
          schema:
            type: integer
            format: int32
        - name: groupType
          in: path
          description: Type of group the supplied member applied.
          required: true
          schema:
            type: integer
            format: int32
        - name: membershipId
          in: path
          description: Membership ID to for which to find applied groups.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: Membership type of the supplied membership ID.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupPotentialMembershipSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GroupV2/{groupId}/Members/IndividualInvite/{membershipType}/{membershipId}/:
    post:
      tags:
        - GroupV2
      description: Invite a user to join this group.
      operationId: GroupV2.IndividualGroupInvite
      parameters:
        - name: groupId
          in: path
          description: ID of the group you would like to join.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: Membership id of the account being invited.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: MembershipType of the account being invited.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupApplicationResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /GroupV2/{groupId}/Members/IndividualInviteCancel/{membershipType}/{membershipId}/:
    post:
      tags:
        - GroupV2
      description: Cancels a pending invitation to join a group.
      operationId: GroupV2.IndividualGroupInviteCancel
      parameters:
        - name: groupId
          in: path
          description: ID of the group you would like to join.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipId
          in: path
          description: Membership id of the account being cancelled.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: MembershipType of the account being cancelled.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/GroupsV2.GroupApplicationResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdminGroups
  /Tokens/Partner/ClaimOffer/:
    post:
      tags:
        - Tokens
      description: Claim a partner offer as the authenticated user.
      operationId: Tokens.ClaimPartnerOffer
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: boolean
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - PartnerOfferGrant
  /Tokens/Partner/ApplyMissingOffers/{partnerApplicationId}/{targetBnetMembershipId}/:
    post:
      tags:
        - Tokens
      description:
        Apply a partner offer to the targeted user. This endpoint does
        not claim a new offer, but any already claimed offers will be applied to the
        game if not already.
      operationId: Tokens.ApplyMissingPartnerOffersWithoutClaim
      parameters:
        - name: partnerApplicationId
          in: path
          description: The partner application identifier.
          required: true
          schema:
            type: integer
            format: int32
        - name: targetBnetMembershipId
          in: path
          description:
            The bungie.net user to apply missing offers to. If not self,
            elevated permissions are required.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: boolean
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - PartnerOfferGrant
  /Tokens/Partner/History/{partnerApplicationId}/{targetBnetMembershipId}/:
    get:
      tags:
        - Tokens
      description:
        Returns the partner sku and offer history of the targeted user.
        Elevated permissions are required to see users that are not yourself.
      operationId: Tokens.GetPartnerOfferSkuHistory
      parameters:
        - name: partnerApplicationId
          in: path
          description: The partner application identifier.
          required: true
          schema:
            type: integer
            format: int32
        - name: targetBnetMembershipId
          in: path
          description:
            The bungie.net user to apply missing offers to. If not self,
            elevated permissions are required.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Tokens.PartnerOfferSkuHistoryResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - PartnerOfferGrant
  /Destiny2/Manifest/:
    get:
      tags:
        - Destiny2
      description: Returns the current version of the manifest as a json object.
      operationId: Destiny2.GetDestinyManifest
      responses:
        200:
          description:
            DestinyManifest is the external-facing contract for just the
            properties needed by those calling the Destiny Platform.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Config.DestinyManifest"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Manifest/{entityType}/{hashIdentifier}/:
    get:
      tags:
        - Destiny2
      description:
        Returns the static definition of an entity of the given Type and
        hash identifier. Examine the API Documentation for the Type Names of entities
        that have their own components/schemas. Note that the return type will always
        *inherit from* DestinyDefinition, but the specific type returned will be the
        requested entity type if it can be found. Please don't use this as a chatty
        alternative to the Manifest database if you require large sets of data, but
        for simple and one-off accesses this should be handy.
      operationId: Destiny2.GetDestinyEntityDefinition
      parameters:
        - name: entityType
          in: path
          description:
            "The type of entity for whom you would like results. These correspond
            to the entity's definition contract name. For instance, if you are looking
            for items, this property should be 'DestinyInventoryItemDefinition'. PREVIEW:
            This endpoint is still in beta, and may experience rough edges. The schema
            is tentatively in final form, but there may be bugs that prevent desirable
            operation."
          required: true
          schema:
            type: string
        - name: hashIdentifier
          in: path
          description: The hash identifier for the specific Entity you want returned.
          required: true
          schema:
            type: integer
            format: uint32
      responses:
        200:
          description: Provides common properties for destiny components/schemas.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Definitions.DestinyDefinition"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/SearchDestinyPlayer/{membershipType}/{displayName}/:
    get:
      tags:
        - Destiny2
      description:
        Returns a list of Destiny memberships given a full Gamertag or
        PSN ID. Unless you pass returnOriginalProfile=true, this will return membership
        information for the users' Primary Cross Save Profile if they are engaged
        in cross save rather than any original Destiny profile that is now being overridden.
      operationId: Destiny2.SearchDestinyPlayer
      parameters:
        - name: displayName
          in: path
          description:
            The full gamertag or PSN id of the player. Spaces and case are
            ignored.
          required: true
          schema:
            type: string
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type, or All.
          required: true
          schema:
            type: integer
            format: int32
        - name: returnOriginalProfile
          in: query
          description:
            (optional) If passed in and set to true, we will return the original
            Destiny Profile(s) linked to that gamertag, and not their currently active
            Destiny Profile.
          schema:
            type: boolean
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/User.UserInfoCard"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Profile/{membershipId}/LinkedProfiles/:
    get:
      tags:
        - Destiny2
      description:
        Returns a summary information about all profiles linked to the
        requesting membership type/membership ID that have valid Destiny information.
        The passed-in Membership Type/Membership ID may be a Bungie.Net membership
        or a Destiny membership. It only returns the minimal amount of data to begin
        making more substantive requests, but will hopefully serve as a useful alternative
        to UserServices for people who just care about Destiny data. Note that it
        will only return linked accounts whose linkages you are allowed to view.
      operationId: Destiny2.GetLinkedProfiles
      parameters:
        - name: getAllMemberships
          in: query
          description:
            (optional) if set to 'true', all memberships regardless of whether
            they're obscured by overrides will be returned. Normal privacy restrictions
            on account linking will still apply no matter what.
          schema:
            type: boolean
        - name: membershipId
          in: path
          description:
            "The ID of the membership whose linked Destiny accounts you want
            returned. Make sure your membership ID matches its Membership Type: don't
            pass us a PSN membership ID and the XBox membership type, it's not going
            to work!"
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description:
            The type for the membership whose linked Destiny accounts you
            want returned.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            "I know what you seek. You seek linked accounts. Found them,
            you have.This contract returns a minimal amount of data about Destiny
            Accounts that are linked through your Bungie.Net account. We will not
            return accounts in this response whose"
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyLinkedProfilesResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Profile/{destinyMembershipId}/:
    get:
      tags:
        - Destiny2
      description: Returns Destiny Profile information for the supplied membership.
      operationId: Destiny2.GetProfile
      parameters:
        - $ref: "#/components/parameters/componentParam"
        - name: destinyMembershipId
          in: path
          description: Destiny membership ID.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            The response for GetDestinyProfile, with components for character
            and item-level data.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyProfileResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Profile/{destinyMembershipId}/Character/{characterId}/:
    get:
      tags:
        - Destiny2
      description: Returns character information for the supplied character.
      operationId: Destiny2.GetCharacter
      parameters:
        - name: characterId
          in: path
          description: ID of the character.
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/componentParam"
        - name: destinyMembershipId
          in: path
          description: Destiny membership ID.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            The response contract for GetDestinyCharacter, with components
            that can be returned for character and item-level data.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyCharacterResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Clan/{groupId}/WeeklyRewardState/:
    get:
      tags:
        - Destiny2
      description:
        Returns information on the weekly clan rewards and if the clan
        has earned them or not. Note that this will always report rewards as not redeemed.
      operationId: Destiny2.GetClanWeeklyRewardState
      parameters:
        - name: groupId
          in: path
          description: A valid group id of clan.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Represents a runtime instance of a user's milestone status.
            Live Milestone data should be combined with DestinyMilestoneDefinition
            data to show the user a picture of what is available for them to do in
            the game, and their status in regards to said "things to do." Consider
            it a big, wonky to-do list, or Advisors 3.0 for those who remember the
            Destiny 1 API.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Milestones.DestinyMilestone"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Profile/{destinyMembershipId}/Item/{itemInstanceId}/:
    get:
      tags:
        - Destiny2
      description:
        Retrieve the details of an instanced Destiny Item. An instanced
        Destiny item is one with an ItemInstanceId. Non-instanced items, such as materials,
        have no useful instance-specific details and thus are not queryable here.
      operationId: Destiny2.GetItem
      parameters:
        - $ref: "#/components/parameters/componentParam"
        - name: destinyMembershipId
          in: path
          description: The membership ID of the destiny profile.
          required: true
          schema:
            type: integer
            format: int64
        - name: itemInstanceId
          in: path
          description: The Instance ID of the destiny item.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            'The response object for retrieving an individual instanced
            item. None of these components are relevant for an item that doesn''t
            have an "itemInstanceId": for those, get your information from the DestinyInventoryDefinition.'
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyItemResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Profile/{destinyMembershipId}/Character/{characterId}/Vendors/:
    get:
      tags:
        - Destiny2
      description:
        Get currently available vendors from the list of vendors that can
        possibly have rotating inventory. Note that this does not include things like
        preview vendors and vendors-as-kiosks, neither of whom have rotating/dynamic
        inventories. Use their components/schemas as-is for those.
      operationId: Destiny2.GetVendors
      parameters:
        - name: characterId
          in: path
          description:
            The Destiny Character ID of the character for whom we're getting
            vendor info.
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/componentParam"
        - name: destinyMembershipId
          in: path
          description: Destiny membership ID of another user. You may be denied.
          required: true
          schema:
            type: integer
            format: int64
        - name: filter
          in: query
          description: The filter of what vendors and items to return, if any.
          schema:
            type: integer
            format: int32
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            A response containing all of the components for all requested
            vendors.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyVendorsResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Profile/{destinyMembershipId}/Character/{characterId}/Vendors/{vendorHash}/:
    get:
      tags:
        - Destiny2
      description: Get the details of a specific Vendor.
      operationId: Destiny2.GetVendor
      parameters:
        - name: characterId
          in: path
          description:
            The Destiny Character ID of the character for whom we're getting
            vendor info.
          required: true
          schema:
            type: integer
            format: int64
        - $ref: "#/components/parameters/componentParam"
        - name: destinyMembershipId
          in: path
          description: Destiny membership ID of another user. You may be denied.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
        - name: vendorHash
          in: path
          description: The Hash identifier of the Vendor to be returned.
          required: true
          schema:
            type: integer
            format: uint32
      responses:
        200:
          description: A response containing all of the components for a vendor.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyVendorResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Vendors/:
    get:
      tags:
        - Destiny2
        - Preview
      description:
        "Get items available from vendors where the vendors have items
        for sale that are common for everyone. If any portion of the Vendor's available
        inventory is character or account specific, we will be unable to return their
        data from this endpoint due to the way that available inventory is computed.
        As I am often guilty of saying: 'It's a long story...'"
      operationId: Destiny2.GetPublicVendors
      parameters:
        - $ref: "#/components/parameters/componentParam"
      responses:
        200:
          description:
            "A response containing all valid components for the public
            Vendors endpoint. It is a decisively smaller subset of data compared
            to what we can get when we know the specific user making the request.r
            n If you want any of the other data - item details, whether or not you
            can buy it, etc... you'll have to call in the context of a character.
            I know, sad but true."
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyPublicVendorsResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      x-preview: true
  /Destiny2/{membershipType}/Profile/{destinyMembershipId}/Character/{characterId}/Collectibles/{collectiblePresentationNodeHash}/:
    get:
      tags:
        - Destiny2
      description:
        Given a Presentation Node that has Collectibles as direct descendants,
        this will return item details about those descendants in the context of the
        requesting character.
      operationId: Destiny2.GetCollectibleNodeDetails
      parameters:
        - name: characterId
          in: path
          description:
            The Destiny Character ID of the character for whom we're getting
            collectible detail info.
          required: true
          schema:
            type: integer
            format: int64
        - name: collectiblePresentationNodeHash
          in: path
          description:
            The hash identifier of the Presentation Node for whom we should
            return collectible details. Details will only be returned for collectibles
            that are direct descendants of this node.
          required: true
          schema:
            type: integer
            format: uint32
        - $ref: "#/components/parameters/componentParam"
        - name: destinyMembershipId
          in: path
          description: Destiny membership ID of another user. You may be denied.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Returns the detailed information about a Collectible Presentation
            Node and any Collectibles that are direct descendants.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyCollectibleNodeDetailResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Actions/Items/TransferItem/:
    post:
      tags:
        - Destiny2
      description:
        Transfer an item to/from your vault. You must have a valid Destiny
        account. You must also pass BOTH a reference AND an instance ID if it's an
        instanced item. itshappening.gif
      operationId: Destiny2.TransferItem
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - MoveEquipDestinyItems
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "0.1"
  /Destiny2/Actions/Items/PullFromPostmaster/:
    post:
      tags:
        - Destiny2
      description:
        Extract an item from the Postmaster, with whatever implications
        that may entail. You must have a valid Destiny account. You must also pass
        BOTH a reference AND an instance ID if it's an instanced item.
      operationId: Destiny2.PullFromPostmaster
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - MoveEquipDestinyItems
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "0.1"
  /Destiny2/Actions/Items/EquipItem/:
    post:
      tags:
        - Destiny2
      description:
        Equip an item. You must have a valid Destiny Account, and either
        be in a social space, in orbit, or offline.
      operationId: Destiny2.EquipItem
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - MoveEquipDestinyItems
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "0.1"
  /Destiny2/Actions/Items/EquipItems/:
    post:
      tags:
        - Destiny2
      description:
        Equip a list of items by itemInstanceIds. You must have a valid
        Destiny Account, and either be in a social space, in orbit, or offline. Any
        items not found on your character will be ignored.
      operationId: Destiny2.EquipItems
      responses:
        200:
          description:
            The results of a bulk Equipping operation performed through
            the Destiny API.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.DestinyEquipItemResults"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - MoveEquipDestinyItems
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "0.1"
  /Destiny2/Actions/Items/SetLockState/:
    post:
      tags:
        - Destiny2
      description:
        Set the Lock State for an instanced item. You must have a valid
        Destiny Account.
      operationId: Destiny2.SetItemLockState
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - MoveEquipDestinyItems
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "0.1"
  /Destiny2/Actions/Items/SetTrackedState/:
    post:
      tags:
        - Destiny2
      description:
        Set the Tracking State for an instanced item, if that item is a
        Quest or Bounty. You must have a valid Destiny Account. Yeah, it's an item.
      operationId: Destiny2.SetQuestTrackedState
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - MoveEquipDestinyItems
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "1"
  /Destiny2/Actions/Items/InsertSocketPlug/:
    post:
      tags:
        - Destiny2
        - Preview
      description:
        Insert a plug into a socketed item. I know how it sounds, but I
        assure you it's much more G-rated than you might be guessing. We haven't decided
        yet whether this will be able to insert plugs that have side effects, but
        if we do it will require special scope permission for an application attempting
        to do so. You must have a valid Destiny Account, and either be in a social
        space, in orbit, or offline. Request must include proof of permission for
        'InsertPlugs' from the account owner.
      operationId: Destiny2.InsertSocketPlug
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Responses.DestinyItemChangeResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdvancedWriteActions
      x-preview: true
      x-documentation-attributes:
        ThrottleSecondsBetweenActionPerUser: "1"
  /Destiny2/Stats/PostGameCarnageReport/{activityId}/:
    get:
      tags:
        - Destiny2
      description: Gets the available post game carnage report for the activity ID.
      operationId: Destiny2.GetPostGameCarnageReport
      parameters:
        - name: activityId
          in: path
          description: The ID of the activity whose PGCR is requested.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyPostGameCarnageReportData"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Stats/PostGameCarnageReport/{activityId}/Report/:
    post:
      tags:
        - Destiny2
      description:
        Report a player that you met in an activity that was engaging in
        ToS-violating activities. Both you and the offending player must have played
        in the activityId passed in. Please use this judiciously and only when you
        have strong suspicions of violation, pretty please.
      operationId: Destiny2.ReportOffensivePostGameCarnageReportPlayer
      parameters:
        - name: activityId
          in: path
          description:
            The ID of the activity where you ran into the brigand that you're
            reporting.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - BnetWrite
  /Destiny2/Stats/Definition/:
    get:
      tags:
        - Destiny2
      description: Gets historical stats components/schemas.
      operationId: Destiny2.GetHistoricalStatsDefinition
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyHistoricalStatsDefinition"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Stats/Leaderboards/Clans/{groupId}/:
    get:
      tags:
        - Destiny2
        - Preview
      description:
        "Gets leaderboards with the signed in user's friends and the supplied
        destinyMembershipId as the focus. PREVIEW: This endpoint is still in beta,
        and may experience rough edges. The schema is in final form, but there may
        be bugs that prevent desirable operation."
      operationId: Destiny2.GetClanLeaderboards
      parameters:
        - name: groupId
          in: path
          description: Group ID of the clan whose leaderboards you wish to fetch.
          required: true
          schema:
            type: integer
            format: int64
        - name: maxtop
          in: query
          description:
            Maximum number of top players to return. Use a large number to
            get entire leaderboard.
          schema:
            type: integer
            format: int32
        - name: modes
          in: query
          description:
            List of game modes for which to get leaderboards. See the documentation
            for DestinyActivityModeType for valid values, and pass in string representation,
            comma delimited.
          schema:
            type: string
        - name: statid
          in: query
          description: ID of stat to return rather than returning all Leaderboard stats.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyLeaderboard"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      x-preview: true
  /Destiny2/Stats/AggregateClanStats/{groupId}/:
    get:
      tags:
        - Destiny2
        - Preview
      description:
        "Gets aggregated stats for a clan using the same categories as
        the clan leaderboards. PREVIEW: This endpoint is still in beta, and may experience
        rough edges. The schema is in final form, but there may be bugs that prevent
        desirable operation."
      operationId: Destiny2.GetClanAggregateStats
      parameters:
        - name: groupId
          in: path
          description: Group ID of the clan whose leaderboards you wish to fetch.
          required: true
          schema:
            type: integer
            format: int64
        - name: modes
          in: query
          description:
            List of game modes for which to get leaderboards. See the documentation
            for DestinyActivityModeType for valid values, and pass in string representation,
            comma delimited.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyClanAggregateStat"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      x-preview: true
  /Destiny2/{membershipType}/Account/{destinyMembershipId}/Stats/Leaderboards/:
    get:
      tags:
        - Destiny2
        - Preview
      description:
        "Gets leaderboards with the signed in user's friends and the supplied
        destinyMembershipId as the focus. PREVIEW: This endpoint has not yet been
        implemented. It is being returned for a preview of future functionality, and
        for public comment/suggestion/preparation."
      operationId: Destiny2.GetLeaderboards
      parameters:
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: maxtop
          in: query
          description:
            Maximum number of top players to return. Use a large number to
            get entire leaderboard.
          schema:
            type: integer
            format: int32
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
        - name: modes
          in: query
          description:
            List of game modes for which to get leaderboards. See the documentation
            for DestinyActivityModeType for valid values, and pass in string representation,
            comma delimited.
          schema:
            type: string
        - name: statid
          in: query
          description: ID of stat to return rather than returning all Leaderboard stats.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyLeaderboard"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      x-preview: true
  /Destiny2/Stats/Leaderboards/{membershipType}/{destinyMembershipId}/{characterId}/:
    get:
      tags:
        - Destiny2
        - Preview
      description:
        "Gets leaderboards with the signed in user's friends and the supplied
        destinyMembershipId as the focus. PREVIEW: This endpoint is still in beta,
        and may experience rough edges. The schema is in final form, but there may
        be bugs that prevent desirable operation."
      operationId: Destiny2.GetLeaderboardsForCharacter
      parameters:
        - name: characterId
          in: path
          description:
            The specific character to build the leaderboard around for the
            provided Destiny Membership.
          required: true
          schema:
            type: integer
            format: int64
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: maxtop
          in: query
          description:
            Maximum number of top players to return. Use a large number to
            get entire leaderboard.
          schema:
            type: integer
            format: int32
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
        - name: modes
          in: query
          description:
            List of game modes for which to get leaderboards. See the documentation
            for DestinyActivityModeType for valid values, and pass in string representation,
            comma delimited.
          schema:
            type: string
        - name: statid
          in: query
          description: ID of stat to return rather than returning all Leaderboard stats.
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyLeaderboard"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      x-preview: true
  /Destiny2/Armory/Search/{type}/{searchTerm}/:
    get:
      tags:
        - Destiny2
      description: Gets a page list of Destiny items.
      operationId: Destiny2.SearchDestinyEntities
      parameters:
        - name: page
          in: query
          description: Page number to return, starting with 0.
          schema:
            type: integer
            format: int32
        - name: searchTerm
          in: path
          description: The string to use when searching for Destiny entities.
          required: true
          schema:
            type: string
        - name: type
          in: path
          description:
            The type of entity for whom you would like results. These correspond
            to the entity's definition contract name. For instance, if you are looking
            for items, this property should be 'DestinyInventoryItemDefinition'.
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            The results of a search for Destiny content. This will be improved
            on over time, I've been doing some experimenting to see what might be
            useful.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Definitions.DestinyEntitySearchResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Stats/:
    get:
      tags:
        - Destiny2
      description: Gets historical stats for indicated character.
      operationId: Destiny2.GetHistoricalStats
      parameters:
        - name: characterId
          in: path
          description:
            The id of the character to retrieve. You can omit this character
            ID or set it to 0 to get aggregate stats across all characters.
          required: true
          schema:
            type: integer
            format: int64
        - name: dayend
          in: query
          description:
            Last day to return when daily stats are requested. Use the format
            YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to
            be requested in a single request.
          schema:
            type: string
            format: date-time
        - name: daystart
          in: query
          description:
            First day to return when daily stats are requested. Use the format
            YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to
            be requested in a single request.
          schema:
            type: string
            format: date-time
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: groups
          in: query
          description:
            "Group of stats to include, otherwise only general stats are
            returned. Comma separated list is allowed. Values: General, Weapons, Medals"
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              description:
                If the enum value is > 100, it is a "special" group that
                cannot be queried for directly (special cases apply to when they are
                returned, and are not relevant in general cases)
              format: int32
              x-enum-reference:
                $ref: "#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyStatsGroupType"
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
        - name: modes
          in: query
          description:
            Game modes to return. See the documentation for DestinyActivityModeType
            for valid values, and pass in string representation, comma delimited.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              description:
                For historical reasons, this list will have both D1 and D2-relevant
                Activity Modes in it. Please don't take this to mean that some D1-only
                feature is coming back!
              format: int32
              x-enum-reference:
                $ref: "#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyActivityModeType"
        - name: periodType
          in: query
          description:
            "Indicates a specific period type to return. Optional. May be:
            Daily, AllTime, or Activity"
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsByPeriod"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Account/{destinyMembershipId}/Stats/:
    get:
      tags:
        - Destiny2
      description:
        Gets aggregate historical stats organized around each character
        for a given account.
      operationId: Destiny2.GetHistoricalStatsForAccount
      parameters:
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: groups
          in: query
          description:
            "Groups of stats to include, otherwise only general stats are
            returned. Comma separated list is allowed. Values: General, Weapons, Medals."
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
              description:
                If the enum value is > 100, it is a "special" group that
                cannot be queried for directly (special cases apply to when they are
                returned, and are not relevant in general cases)
              format: int32
              x-enum-reference:
                $ref: "#/components/schemas/Destiny.HistoricalStats.Definitions.DestinyStatsGroupType"
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalStatsAccountResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Stats/Activities:
    get:
      tags:
        - Destiny2
      description: Gets activity history stats for indicated character.
      operationId: Destiny2.GetActivityHistory
      parameters:
        - name: characterId
          in: path
          description: The id of the character to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: count
          in: query
          description: Number of rows to return
          schema:
            type: integer
            format: int32
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
        - name: mode
          in: query
          description:
            A filter for the activity mode to be returned. None returns all
            activities. See the documentation for DestinyActivityModeType for valid
            values, and pass in string representation.
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page number to return, starting with 0.
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyActivityHistoryResults"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Stats/UniqueWeapons/:
    get:
      tags:
        - Destiny2
      description: Gets details about unique weapon usage, including all exotic weapons.
      operationId: Destiny2.GetUniqueWeaponHistory
      parameters:
        - name: characterId
          in: path
          description: The id of the character to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyHistoricalWeaponStatsData"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Stats/AggregateActivityStats/:
    get:
      tags:
        - Destiny2
      description:
        Gets all activities the character has participated in together
        with aggregate statistics for those activities.
      operationId: Destiny2.GetDestinyAggregateActivityStats
      parameters:
        - name: characterId
          in: path
          description: The specific character whose activities should be returned.
          required: true
          schema:
            type: integer
            format: int64
        - name: destinyMembershipId
          in: path
          description: The Destiny membershipId of the user to retrieve.
          required: true
          schema:
            type: integer
            format: int64
        - name: membershipType
          in: path
          description: A valid non-BungieNet membership type.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.HistoricalStats.DestinyAggregateActivityResults"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Milestones/{milestoneHash}/Content/:
    get:
      tags:
        - Destiny2
      description:
        Gets custom localized content for the milestone of the given hash,
        if it exists.
      operationId: Destiny2.GetPublicMilestoneContent
      parameters:
        - name: milestoneHash
          in: path
          description: The identifier for the milestone to be returned.
          required: true
          schema:
            type: integer
            format: uint32
      responses:
        200:
          description:
            Represents localized, extended content related to Milestones.
            This is intentionally returned by a separate endpoint and not with Character-level
            Milestone data because we do not put localized data into standard Destiny
            responses, both for brevity of response and for caching purposes. If you
            really need this data, hit the Milestone Content endpoint.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Milestones.DestinyMilestoneContent"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Milestones/:
    get:
      tags:
        - Destiny2
      description: Gets public information about currently available Milestones.
      operationId: Destiny2.GetPublicMilestones
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Destiny.Milestones.DestinyPublicMilestone"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Awa/Initialize/:
    post:
      tags:
        - Destiny2
      description: Initialize a request to perform an advanced write action.
      operationId: Destiny2.AwaInitializeRequest
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Advanced.AwaInitializeResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdvancedWriteActions
  /Destiny2/Awa/AwaProvideAuthorizationResult/:
    post:
      tags:
        - Destiny2
      description:
        Provide the result of the user interaction. Called by the Bungie
        Destiny App to approve or reject a request.
      operationId: Destiny2.AwaProvideAuthorizationResult
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Destiny2/Awa/GetActionToken/{correlationId}/:
    get:
      tags:
        - Destiny2
      description: Returns the action token if user approves the request.
      operationId: Destiny2.AwaGetActionToken
      parameters:
        - name: correlationId
          in: path
          description: The identifier for the advanced write action request.
          required: true
          schema:
            type: string
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Destiny.Advanced.AwaAuthorizationResult"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - AdvancedWriteActions
  /CommunityContent/Get/{sort}/{mediaFilter}/{page}/:
    get:
      tags:
        - CommunityContent
      description: Returns community content.
      operationId: CommunityContent.GetCommunityContent
      parameters:
        - name: mediaFilter
          in: path
          description: The type of media to get
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          description: Zero based page
          required: true
          schema:
            type: integer
            format: int32
        - name: sort
          in: path
          description: The sort mode.
          required: true
          schema:
            type: integer
            format: byte
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Forum.PostSearchResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Trending/Categories/:
    get:
      tags:
        - Trending
      description:
        Returns trending items for Bungie.net, collapsed into the first
        page of items per category. For pagination within a category, call GetTrendingCategory.
      operationId: Trending.GetTrendingCategories
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Trending.TrendingCategories"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Trending/Categories/{categoryId}/{pageNumber}/:
    get:
      tags:
        - Trending
      description: Returns paginated lists of trending items for a category.
      operationId: Trending.GetTrendingCategory
      parameters:
        - name: categoryId
          in: path
          description: The ID of the category for whom you want additional results.
          required: true
          schema:
            type: string
        - name: pageNumber
          in: path
          description: "The page # of results to return."
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfTrendingEntry"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Trending/Details/{trendingEntryType}/{identifier}/:
    get:
      tags:
        - Trending
      description:
        "Returns the detailed results for a specific trending entry. Note
        that trending entries are uniquely identified by a combination of *both* the
        TrendingEntryType *and* the identifier: the identifier alone is not guaranteed
        to be globally unique."
      operationId: Trending.GetTrendingEntryDetail
      parameters:
        - name: identifier
          in: path
          description: The identifier for the entity to be returned.
          required: true
          schema:
            type: string
        - name: trendingEntryType
          in: path
          description: The type of entity to be returned.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Trending.TrendingDetail"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Fireteam/Clan/{groupId}/ActiveCount/:
    get:
      tags:
        - Fireteam
      description:
        Gets a count of all active non-public fireteams for the specified
        clan. Maximum value returned is 25.
      operationId: Fireteam.GetActivePrivateClanFireteamCount
      parameters:
        - name: groupId
          in: path
          description: The group id of the clan.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: integer
                    format: int32
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadGroups
  /Fireteam/Clan/{groupId}/Available/{platform}/{activityType}/{dateRange}/{slotFilter}/{publicOnly}/{page}/:
    get:
      tags:
        - Fireteam
      description:
        Gets a listing of all of this clan's fireteams that are have available
        slots. Caller is not checked for join criteria so caching is maximized.
      operationId: Fireteam.GetAvailableClanFireteams
      parameters:
        - name: activityType
          in: path
          description: The activity type to filter by.
          required: true
          schema:
            type: integer
            format: int32
        - name: dateRange
          in: path
          description: The date range to grab available fireteams.
          required: true
          schema:
            type: integer
            format: byte
        - name: groupId
          in: path
          description: The group id of the clan.
          required: true
          schema:
            type: integer
            format: int64
        - name: langFilter
          in: query
          description: An optional language filter.
          schema:
            type: string
        - name: page
          in: path
          description: Zero based page
          required: true
          schema:
            type: integer
            format: int32
        - name: platform
          in: path
          description: The platform filter.
          required: true
          schema:
            type: integer
            format: byte
        - name: publicOnly
          in: path
          description: Determines public/private filtering.
          required: true
          schema:
            type: integer
            format: byte
        - name: slotFilter
          in: path
          description: Filters based on available slots
          required: true
          schema:
            type: integer
            format: byte
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfFireteamSummary"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadGroups
  /Fireteam/Search/Available/{platform}/{activityType}/{dateRange}/{slotFilter}/{page}/:
    get:
      tags:
        - Fireteam
      description:
        Gets a listing of all public fireteams starting now with open slots.
        Caller is not checked for join criteria so caching is maximized.
      operationId: Fireteam.SearchPublicAvailableClanFireteams
      parameters:
        - name: activityType
          in: path
          description: The activity type to filter by.
          required: true
          schema:
            type: integer
            format: int32
        - name: dateRange
          in: path
          description: The date range to grab available fireteams.
          required: true
          schema:
            type: integer
            format: byte
        - name: langFilter
          in: query
          description: An optional language filter.
          schema:
            type: string
        - name: page
          in: path
          description: Zero based page
          required: true
          schema:
            type: integer
            format: int32
        - name: platform
          in: path
          description: The platform filter.
          required: true
          schema:
            type: integer
            format: byte
        - name: slotFilter
          in: path
          description: Filters based on available slots
          required: true
          schema:
            type: integer
            format: byte
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfFireteamSummary"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadGroups
  /Fireteam/Clan/{groupId}/My/{platform}/{includeClosed}/{page}/:
    get:
      tags:
        - Fireteam
      description:
        Gets a listing of all clan fireteams that caller is an applicant,
        a member, or an alternate of.
      operationId: Fireteam.GetMyClanFireteams
      parameters:
        - name: groupFilter
          in: query
          description:
            If true, filter by clan. Otherwise, ignore the clan and show
            all of the user's fireteams.
          schema:
            type: boolean
        - name: groupId
          in: path
          description:
            The group id of the clan. (This parameter is ignored unless the
            optional query parameter groupFilter is true).
          required: true
          schema:
            type: integer
            format: int64
        - name: includeClosed
          in: path
          description: If true, return fireteams that have been closed.
          required: true
          schema:
            type: boolean
        - name: langFilter
          in: query
          description: An optional language filter.
          schema:
            type: string
        - name: page
          in: path
          description: Deprecated parameter, ignored.
          required: true
          schema:
            type: integer
            format: int32
        - name: platform
          in: path
          description: The platform filter.
          required: true
          schema:
            type: integer
            format: byte
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/SearchResultOfFireteamResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadGroups
  /Fireteam/Clan/{groupId}/Summary/{fireteamId}/:
    get:
      tags:
        - Fireteam
      description: Gets a specific clan fireteam.
      operationId: Fireteam.GetClanFireteam
      parameters:
        - name: fireteamId
          in: path
          description: The unique id of the fireteam.
          required: true
          schema:
            type: integer
            format: int64
        - name: groupId
          in: path
          description: The group id of the clan.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Fireteam.FireteamResponse"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
      security:
        - oauth2:
            - ReadGroups
  /GetAvailableLocales/:
    get:
      tags:
        - ""
      description: List of available localization cultures
      operationId: .GetAvailableLocales
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      type: string
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /Settings/:
    get:
      tags:
        - ""
      description: Get the common settings used by the Bungie.Net environment.
      operationId: .GetCommonSettings
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    $ref: "#/components/schemas/Common.Models.CoreSettingsConfiguration"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /UserSystemOverrides/:
    get:
      tags:
        - ""
      description:
        Get the user-specific system overrides that should be respected
        alongside common systems.
      operationId: .GetUserSystemOverrides
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Common.Models.CoreSystem"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false
  /GlobalAlerts/:
    get:
      tags:
        - ""
      description:
        Gets any active global alert for display in the forum banners,
        help pages, etc. Usually used for DOC alerts.
      operationId: .GetGlobalAlerts
      parameters:
        - name: includestreaming
          in: query
          description: Determines whether Streaming Alerts are included in results
          schema:
            type: boolean
      responses:
        200:
          description:
            Look at the Response property for more information about the
            nature of this response
          content:
            "*/*":
              schema:
                type: object
                properties:
                  Response:
                    type: array
                    items:
                      $ref: "#/components/schemas/GlobalAlert"
                  ErrorCode:
                    type: integer
                    format: int32
                    x-enum-reference:
                      $ref: "#/components/schemas/PlatformErrorCodes"
                  ThrottleSeconds:
                    type: integer
                    format: int32
                  ErrorStatus:
                    type: string
                  Message:
                    type: string
                  MessageData:
                    type: object
                    additionalProperties:
                      type: string
                  DetailedErrorTrace:
                    type: string
      deprecated: false

tags:
  - name: App
    description: application
  - name: User
    description: user
  - name: Content
    description: content
  - name: Forum
    description: forum
  - name: GroupV2
    description: groupV2
  - name: Tokens
    description: tokens
  - name: Destiny2
    description: destiny2
  - name: CommunityContent
    description: communitycontent
  - name: Trending
    description: trending
  - name: Fireteam
    description: fireteam
  - name: ""
    description: core

externalDocs:
  description: Our Wiki page about OAuth through Bungie.net.
  url: "https://github.com/Bungie-net/api/wiki/OAuth-Documentation"
